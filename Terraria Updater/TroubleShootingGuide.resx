<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        95SiKKMdyQAAAABJRU5ErkJggg==
</value>
  </data>
</root>